[helpline]

exten => 116,1,NoOp()
	;
	same => n,Set(CONFBRIDGE(user,template)=helpline_user)
	;
	same => n,GotoIf($["${BYPASS}" = ""]?:answered)
	;
	same => n,Set(CONFBRIDGE(user,end_marked)=yes)
	same => n,Set(CONFBRIDGE(user,dtmf_passthrough)=yes)
	same => n,Set(CONFBRIDGE(user,quiet)=yes)
	same => n,Set(CONFBRIDGE(user,music_on_hold_when_empty)=no)
	;
	same => n,Set(BRIDGEID=${CUT(UNIQUEID,.,1)}${FILTER(0-9,${CALLERID(num)}))
	;
	same => n(answered),Answer()
	same => n,ConfBridge(${BRIDGEID})
	same => n,Hangup()

exten => helpline,1,NoOp(Redirecting to ${INITGO})
	;
	same => n,GotoIf($["${INCVOL}" = ""]?${INITGO})
	same => n,Set(VOLUME(TX)=${INCVOL})
	same => n,Goto(${INITGO})
	;
	same => n(waitime),NoOp(Defined Wait-Time: ${WAITIME})
	same => n,Wait(${WAITIME})
	same => n,Goto(hangup)
	;
	same => n(playaudio),NoOp()
	; VOICE = selected audio voice
	; PLAYMEDIA = file name
	; EXITPLAY = hangup default
	same => n,Playback(${PLAYMEDIA})
	same => n,Goto(${EXITPLAY})
	;
	same => n(studio),NoOp()
	; SILENCE = max silence to exit (5 sec)
	; STUDIOLEN = length of recording
	; EXITSTUDIO = hangup default
	; STUDIOVARS = example: kuy
	same => n,Set(STUDIO=0)
	;
	same => n(studiobeep),NoOp()
	same => n,GotoIf($["${BEEP}" = "yes"]?:initstudio)
	same => n,Set(EXITPLAY=initstudio)
	same => n,Set(PLAYMEDIA=${MEDIAPATH}/${VOICE}/helpline-${STUDIOID}-record)
	same => n,Goto(playaudio)
	;
	; k = keep recording on hangup
	; y = terminate on any key
	; u = Don't truncate recorded silence
	same => n(initstudio),NoOp()
	same => n,Record(${MEDIAWAV}.wav,${SILENCE},${STUDIOLEN},${STUDIOVARS})
	;
	same => n,Set(STUDIO=$[${STUDIO} + 1])
	same => n,Set(EXITPLAY=savestudio)
	same => n,Set(PLAYMEDIA=${MEDIAPATH}/${VOICE}/helpline-${STUDIOID}-replay&${MEDIAWAV})
	same => n,GotoIf($["${STUDIO}" = "3"]?playaudio)
	;
	same => n(studiodtmf),NoOp()
	same => n,Set(READMAX=1)
	same => n,Set(READSEC=5)
	same => n,Set(SKIPREAD=yes)
	same => n,Set(EXITPLAY=dtmfread)
	same => n,Set(EXITDTMF=exitstudio)
	same => n,Set(READMEDIA=helpline-${STUDIOID}-submit)
	same => n,Goto(playaudio)
	;
	same => n(exitstudio),NoOp()
	same => n,GotoIf($["${CAPTCHA}" = ""]?savestudio:studiobeep)
	;
	same => n(savestudio),NoOp()
	same => n,Set(EXITPLAY=${EXITSTUDIO})
	same => n,Set(PLAYMEDIA=${MEDIAPATH}/${VOICE}/${STUDIOID}-media-submitted)
	same => n,Goto(playaudio)
	;
	same => n(dtmfread),NoOp()
	same => n,Set(LOOP=0)
	; Read(variable[,filename[&filename2[&...]][,maxdigits[,options[,attempts[,timeout]]]]])
	; READMAX = maximum digits
	; READSEC = input timeout
	; READMEDIA = media item
	same => n(captcha),Read(CAPTCHA,${READMEDIA},${READMAX},,1,${READSEC})
	;READSTATUS: OK|ERROR|HANGUP|INTERRUPTED|SKIPPED|TIMEOUT
	;
	same => n,GotoIf($["${SKIPREAD}" = "yes"]?${EXITDTMF})
	same => n,GotoIf($["${CAPTCHA}" = ""]?:${EXITDTMF})
	same => n,GotoIf($["${NULLDTMF}" = ""]?:${NULLDTMF})
	same => n,Set(LOOP=$[${LOOP} + 1])
	same => n,Set(EXITPLAY=captcha)
	same => n,Set(PLAYMEDIA=${MEDIAPATH}/${VOICE}/helpline-incorrect-captcha)
	same => n,GotoIf($["${LOOP}" = "3"]?:playaudio)
	same => n,Set(EXITPLAY=hangup)
	same => n,Set(PLAYMEDIA=${MEDIAPATH}/${VOICE}/helpline-max-captcha)
	same => n,Goto(playaudio)
	;
	same => n(saynum),NoOp()
	same => n,SayNumbers(${SAYSTR})
	same => n,GotoIf($["${POSTSAY}" = ""]?${EXITSAY})
	same => n,Set(EXITPLAY=${EXITSAY})
	same => n,Set(PLAYMEDIA=${POSTSAY})
	same => n,Goto(playaudio)
	;
	same => n(sayint),NoOp()
	same => n,SayDigits(${SAYSTR})
	same => n,GotoIf($["${POSTSAY}" = ""]?${EXITSAY})
	same => n,Set(EXITPLAY=${EXITSAY})
	same => n,Set(PLAYMEDIA=${POSTSAY})
	same => n,Goto(playaudio)
	;
	same => n(saychar),NoOp()
	same => n,SayAlpha(${SAYSTR})
	same => n,GotoIf($["${POSTSAY}" = ""]?${EXITSAY})
	same => n,Set(EXITPLAY=${EXITSAY})
	same => n,Set(PLAYMEDIA=${POSTSAY})
	same => n,Goto(playaudio)
	;
	same => n(socketio),NoOp(Socket Stream ${BRIDGEID})
	same => n,AudioSocket(${SOCKUIID},${SOCKIPAD}:${SOCKPORT})
	; option channel dial
	; same = n,Dial(AudioSocket/${SOCKIPAD}:${SOCKPORT}/${SOCKUIID})
	same => n,Goto(hangup)
	;
	same => n(bridgeclose),NoOp(Kick and Close Bridge ${BRIDGEID})
	same => n,ConfKick(${BRIDGEID})
	same => n,Goto(hangup)
	;
	same => n(hangup),NoOp()
	; Cleanly Hangup Here
	same => n,Hangup()
